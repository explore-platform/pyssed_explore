Python-based stellar SED fitter: progress 01/04/21
--------------------------------------------------

Premise: a Python programme that can generate and fit one or more stellar spectral energy distributions, based on a user-specified astrometric position, list or region

Interface: designed to run
- as an online service
- as an offline stand-alone service
- as a module called from third-party code
Testing is being carried out as a stand-alone service at present.

Inputs:
- Mode of operation
- Target(s)
- Fitting mode
- Setup file (optional)

Mode of operation:
- "single" : computes the SED of a single source at a given position, assuming all detected sources are associated with that object
- "list" : computes the SEDs of a list of targets in a user-specified file, under similar assumptions
- "cone" or "box" : computes the SEDs of all targets in a specified region, allowing for source matching and deblending
- "volume" : computes the SEDs of all targets in a volume of space
Only the single option is currently available. The list option is the next aim.

Target: free-form string from user. Can be Gaia source number, SIMBAD identifier or co-ordinates

Fitting mode: either blackbody or model atmosphere.
Only blackbody is currently available. Model atmosphere will allow choice of model.

Setup file: option to use a user-modified version of the existing setup files, to allow for change of surveys, cross-matching parameters, loading of already-downloaded data, etc.




Current method:
- Parameters parsed from command line
- Setup file parsed for user-definable parameters
- If loading from disc, load data, else assume fitting single source (for now)
- Parse the input source:
-- if Gaia source, use Gaia position
-- else, if Hipparcos source, use Hipparcos position
-- else, if SIMBAD identifier or parsable co-ordinates, query SIMBAD
-- if the source has a Gaia identfier, query Gaia database for that source, else use co-ordinates
- Form the SED:
-- query specified VizieR tables for sources at the proper-motion-corrected co-ordinates
-- obtain the filter zero points from SVO if they don't already exist
-- parse resulting tables for photometry and construct SED
-- add realistic errors to missing values
- (At this stage, outlier and interstellar reddening correction will be performed)
- Process SED:
-- (currently only blackbody fitting is available)
-- compute the luminosity multiplier by scaling the blackbody to the median fit, i.e. placing 50% of points on either side of the fit
-- perform chi^2 minimisation between a blackbody and photometry (in magnitude space) to fit temperature
- Plot SED:
-- generate plot as attached



Next steps:
- Add better error trapping
- Propagate Gaia distance through the programme to estimate log(g), needed to fit spectral models
- Revise programme to accept lists of sources as input
- Add stellar atmosphere models as a comparison for fitting
